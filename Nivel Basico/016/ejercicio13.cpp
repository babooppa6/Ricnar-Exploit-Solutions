// ConsoleApplication1.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <windows.h>

struct MyStruct
{
	int(*foo2)(char *);
	char * p_size;
	char size ;
	unsigned char sizeb;
	int cookie ;
	unsigned int leidos;
	int cookie2;
	int cantidad;
	int maxsize ;
	void * buf;
	LPVOID(*foo3)(LPVOID, SIZE_T,int,int);


};
void check(MyStruct * ,void* );
FILE *f1;

int main(int argc, char *argv[])
{
	void *buf = malloc(sizeof(MyStruct));

	MyStruct *valores = new MyStruct();
	printf("address2 :%08x\n", valores);
	int inc=4;
	while (buf > valores) {
		buf=malloc(inc);
		inc += 4;
	}
	printf("address1 :%08x\n", buf);

	char bufpad[0x5000];
	valores->maxsize = 50;
	valores->cookie = 0;
	valores->cookie2 = 0;
	valores->size = 0;
	valores->buf = buf;

		/* Apertura del fichero original, para lectura en binario*/
		f1 = fopen("fichero.dat", "rb");
		if (f1 == NULL)
		{
			perror("No se puede abrir fichero.dat");
			return -1;
		}

		valores->leidos= fread(&valores->size, 1, 1, f1);
		valores->leidos= fread(&valores->cookie, 1, 4, f1);
		valores->leidos= fread(&valores->cookie2, 1, 4, f1);
		valores->leidos = fread(&valores->cantidad, 1, 4, f1);
		valores->leidos = fread(bufpad, 1, 0x5000, f1);

		if (valores->size > valores->maxsize)
		{
			perror("Nos fuimos al carajo\n");
			return -1;
		}

		if ((unsigned int)valores->size < (unsigned int)valores->leidos)
		{
			 valores->leidos=(unsigned int)valores->size;

		}

		
		printf("Size :%08x\n", valores->leidos);

		//__debugbreak();
		valores->p_size = &valores->size;
		valores->foo2 = (int(*)(char *))&printf;
		valores->foo3 = (LPVOID(*)(LPVOID, SIZE_T, int, int))&valores->buf;
		if (valores->cookie2 == 0x25262728) {
			valores->foo3 = (LPVOID(*)(LPVOID, SIZE_T, int, int))&VirtualAlloc;
		}

		check(valores,&bufpad);
		valores->foo3((LPVOID)valores->buf, 50, 0x1000, valores->sizeb/2);
		valores->foo2("We win");
		return 0;
	
}

	void check(MyStruct * _pvalores,void* _bufpad)
	{
		if (_pvalores->cookie == 0x45464748) {
			memcpy(_pvalores->buf,_bufpad,  _pvalores->leidos);


		}

		return;

	}







