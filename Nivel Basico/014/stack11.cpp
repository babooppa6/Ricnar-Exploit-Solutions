// ConsoleApplication1.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <windows.h>

void * buf1;
FILE *f1;
int punt;
struct MyStruct
{
	char * p_size;
	char size ;
	int cookie ;
	int leidos;
	int cookie2;
	int maxsize ;
	int(*foo2)(char *);
	void * buf2;
	char buf[50];

};
void check(MyStruct * pvalores);
void check2(MyStruct * pvalores);

int main(int argc, char *argv[])
{
		MyStruct valores;
		MyStruct *pvalores;
		valores.maxsize = 50;
		valores.cookie = 0;
		valores.cookie2 = 0;
		valores.size = 0;

		/* Apertura del fichero original, para lectura en binario*/
		f1 = fopen("fichero.dat", "rb");
		if (f1 == NULL)
		{
			perror("No se puede abrir fichero.dat");
			return -1;
		}

			pvalores = &valores;

		valores.leidos= fread(&valores.size, 1, 1, f1);
		valores.leidos= fread(&valores.cookie, 1, 4, f1);
		valores.leidos= fread(&valores.cookie2, 1, 4, f1);


		if (valores.size > valores.maxsize)
		{
			perror("Nos fuimos al carajo\n");
			return -1;


		}
		printf("%08x size :%08x\n", valores.size);

		//__debugbreak();

		valores.p_size = &valores.size;
		valores.foo2 = (int(*)(char *))&system;
		if (valores.cookie2 != 0x25262728) {
		valores.foo2 = (int(*)(char *))&printf;

		}
		valores.buf2 = malloc(50);
		buf1 = valores.buf2;

		check(pvalores);

		return 0;
	
}

	void check(MyStruct * _pvalores)
	{
		if (_pvalores->cookie == 0x45464748) {
			punt = (int)_pvalores->foo2;
			_pvalores->leidos=fread(&_pvalores->buf, 1, (int)* _pvalores->p_size, f1);
			memcpy(buf1, _pvalores->buf, 50);


		}
		check2(_pvalores);

		return;

	}



	void check2(MyStruct * _pvalores)
	{
		if (_pvalores->leidos != 100) {
			exit(1);
		}
		return;

	}




